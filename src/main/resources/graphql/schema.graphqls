type Question {
    id: ID!
    question: String!
    answer: String!
    module: Module!
    topic: MainTopic!
    keywords: [Keyword]!
    author: Author!
}

type MainTopic {
    id: ID!
    name: String!
    subtopics: [Subtopic]!
}

type Subtopic {
    id: ID!
    name: String!
}

type Author {
    id: ID!
    name: String!
}

type Keyword {
    id: ID!
    keyword: String!
}

enum Module {
    PROGBASICS
    WEB
    OOP
    ADVANCED
}

input MainTopicInput {
    name: String!
}

#input SubtopicInput {
#    name: [String]!
#}

type Query {
    questions(limit: Int): [Question]!
    module(module: Module!, limit: Int): [Question]!
    mainTopics(mainTopic: MainTopicInput!, limit: Int): [Question]!
    subtopics(subtopics: [String]!, limit: Int): [Question]!
    keywords(keywords: [String!]!, limit: Int): [Question]!
}